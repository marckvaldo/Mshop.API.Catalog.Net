# Etapa de build (compilação com o SDK)
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build

# Definir diretório de trabalho para a aplicação
WORKDIR /app

# Copiar os arquivos da aplicação para dentro do container
COPY ../ /src

# Publicar os três projetos dentro do container
RUN dotnet publish /src/Mshop.API.Catalog/Mshop.API.Catalog.csproj -c Release -o /app/Catalog
#RUN dotnet publish /src/Mshop.GraphQL.API/Mshop.API.GraphQL.csproj -c Release -o /app/GraphQL
#RUN dotnet publish /src/MShop.gRPC.Catalog/Mshop.gRPC.Catalog.csproj -c Release -o /app/gRPC

# Etapa de execução (runtime)
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base

# Definir diretório de trabalho para a aplicação
WORKDIR /app

# Criar um usuário não-root para rodar a aplicação
RUN useradd -m -s /bin/bash myuser

# Instalar o supervisor e limpar os pacotes desnecessários
#RUN apt-get update && \
#    apt-get install -y supervisor && \
#    apt-get clean && \
#    rm -rf /var/lib/apt/lists/*

# Criar diretório de logs e dar permissão
#RUN mkdir -p /var/log/supervisor && chmod -R 777 /var/log/supervisor

# Copiar os arquivos publicados do container de build para o container de execução
COPY --from=build /app /app

RUN chown -R myuser:myuser /app

# Configurar supervisor
#RUN echo '[supervisord]' > /etc/supervisor/supervisord.conf && \
#    echo 'nodaemon=true' >> /etc/supervisor/supervisord.conf && \
#    echo 'logfile=/var/log/supervisor/supervisord.log' >> /etc/supervisor/supervisord.conf && \
#    echo 'logfile_maxbytes=50MB' >> /etc/supervisor/supervisord.conf && \
#    echo 'logfile_backups=10' >> /etc/supervisor/supervisord.conf && \
#    echo 'pidfile=/var/log/supervisor/supervisord.pid' >> /etc/supervisor/supervisord.conf && \
#    echo 'childlogdir=/var/log/supervisor' >> /etc/supervisor/supervisord.conf && \
#    echo '[include]' >> /etc/supervisor/supervisord.conf && \
#    echo 'files = /etc/supervisor/conf.d/*.conf' >> /etc/supervisor/supervisord.conf

# Criar os arquivos de configuração do supervisord
#RUN echo '[program:CatalogAPI]' > /etc/supervisor/conf.d/catalogapi.conf && \
#    echo 'command=dotnet /app/Catalog/Msho.API.Catalog.dll' >> /etc/supervisor/conf.d/catalogapi.conf && \
#    echo 'autostart=true' >> /etc/supervisor/conf.d/catalogapi.conf && \
#    echo 'autorestart=true' >> /etc/supervisor/conf.d/catalogapi.conf && \
#    echo '[program:GraphQLAPI]' > /etc/supervisor/conf.d/graphqlapi.conf && \
#    echo 'command=dotnet /app/GraphQL/Msho.API.GraphQL.dll' >> /etc/supervisor/conf.d/graphqlapi.conf && \
#    echo 'autostart=true' >> /etc/supervisor/conf.d/graphqlapi.conf && \
#    echo 'autorestart=true' >> /etc/supervisor/conf.d/graphqlapi.conf && \
#    echo '[program:gRPCAPI]' > /etc/supervisor/conf.d/grpcapi.conf && \
#    echo 'command=dotnet /app/gRPC/Msho.API.gRPC.dll' >> /etc/supervisor/conf.d/grpcapi.conf && \
#    echo 'autostart=true' >> /etc/supervisor/conf.d/grpcapi.conf && \
#    echo 'autorestart=true' >> /etc/supervisor/conf.d/grpcapi.conf

# Expondo as portas necessárias
#EXPOSE 80 5000 5001
EXPOSE 80

# Mudar para o usuário não-root
USER myuser

# Iniciar o supervisor para gerenciar os três serviços
#CMD ["/usr/bin/supervisord", "-n", "-c", "/etc/supervisor/supervisord.conf"]
ENTRYPOINT ["dotnet", "/app/Catalog/Msho.API.Catalog.dll"]